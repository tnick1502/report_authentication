"""Initial migration

Revision ID: 6c115fb2fb24
Revises: 
Create Date: 2024-09-25 15:40:45.936601

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6c115fb2fb24'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_index('ix_statistics_datetime', table_name='statistics')
    op.drop_table('statistics')
    op.drop_index('files_report_id', table_name='files')
    op.drop_index('ix_files_report_id', table_name='files')
    op.drop_table('files')
    op.drop_table('test_type_files')
    op.drop_index('ix_create_date', table_name='reports')
    op.drop_index('ix_object_number', table_name='reports')
    op.drop_index('ix_reports_user_id', table_name='reports')
    op.drop_table('reports')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reports',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('laboratory_number', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('test_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('object_number', sa.VARCHAR(length=250), autoincrement=False, nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='reports_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reports_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_reports_user_id', 'reports', ['user_id'], unique=False)
    op.create_index('ix_object_number', 'reports', ['object_number'], unique=False)
    op.create_index('ix_create_date', 'reports', ['datetime'], unique=False)
    op.create_table('test_type_files',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('test_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='test_type_files_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='test_type_files_pkey')
    )
    op.create_table('files',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('report_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], name='files_report_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='files_pkey')
    )
    op.create_index('ix_files_report_id', 'files', ['report_id'], unique=False)
    op.create_index('files_report_id', 'files', ['report_id'], unique=False)
    op.create_table('statistics',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('report_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('client_ip', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('datetime', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], name='statistics_report_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='statistics_pkey')
    )
    op.create_index('ix_statistics_datetime', 'statistics', ['datetime'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('mail', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('phone', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('password_hash', sa.VARCHAR(length=60), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('organization', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('organization_url', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('license_level', postgresql.ENUM('STANDART', 'PRO', 'ENTERPRISE', name='licenselevel'), autoincrement=False, nullable=True),
    sa.Column('license_end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('license_update_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('mail', name='users_mail_key'),
    sa.UniqueConstraint('phone', name='users_phone_key'),
    sa.UniqueConstraint('username', name='users_username_key')
    )
    # ### end Alembic commands ###
